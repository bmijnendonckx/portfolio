{"version":3,"sources":["me.svg","img/me.jpg","components/Panel.jsx","components/Navigation.jsx","App.jsx","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","styles","height","padding","Panel","props","react_default","a","createElement","style","Object","objectSpread","backgroundColor","colorFlag","Container","title","Fragment","color","borderColor","Row","children","Navigation","_ref","isTop","lib","expand","fixed","Toggle","className","aria-controls","Collapse","id","Item","Link","href","App","state","isNavTop","_this2","this","document","addEventListener","window","scrollY","setState","components_Navigation","components_Panel","fontSize","marginBottom","marginLeft","fontWeight","data","me","aria-label","position","bottom","right","width","src","image","alt","Component","Boolean","location","hostname","match","ReactDOM","render","src_App_0","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.3a95cdf5.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/me.9f612d44.svg\";","module.exports = __webpack_public_path__ + \"static/media/me.f08b1d83.jpg\";","import React from 'react'\r\nimport { Container, Row } from 'react-bootstrap'\r\n\r\nconst styles = {\r\n    height: \"100vh\",\r\n    padding: \"4rem 0\"\r\n}\r\n\r\nconst Panel = (props) => {\r\n    function title (props) {\r\n        if (props.title) {\r\n                return <React.Fragment>\r\n                    <h1 style={ {color: \"#3EABB8\"} }>{props.title}</h1>\r\n                    <hr style={ {borderColor: \"#3EABB8\"} }/>\r\n                </React.Fragment>\r\n        }\r\n    }\r\n\r\n    return <section style={{...styles, backgroundColor: props.colorFlag === \"1\" ? \"#343434\" : \"#444444\"}}>\r\n        <Container style={{height: \"100%\"}}>\r\n            {title(props)}\r\n            <Row style={{height: \"100%\"}}>\r\n                {props.children}\r\n            </Row>\r\n        </Container>\r\n    </section>\r\n}\r\n\r\nexport default Panel;","import React from 'react'\r\nimport { Navbar, Nav } from 'react-bootstrap/lib'\r\n\r\nconst Navigation = ({isTop}) => {\r\n    return <Navbar expand=\"md\" fixed=\"top\" style={{ backgroundColor: isTop ? \"inherit\" : \"#008E9E\" }}>\r\n        <Navbar.Toggle className=\"ml-auto\" aria-controls=\"basic-navbar-nav\" />\r\n        <Navbar.Collapse id=\"basic-navbar-nav\">\r\n            <Nav className=\"ml-auto\">\r\n                <Nav.Item>\r\n                    <Nav.Link className=\"mr-3\" href=\"#about\">About Me</Nav.Link>\r\n                </Nav.Item>\r\n                <Nav.Item>\r\n                    <Nav.Link className=\"mr-3\" href=\"#skills\">Skills</Nav.Link>\r\n                </Nav.Item>\r\n                <Nav.Item>\r\n                    <Nav.Link className=\"mr-3\" href=\"#portfolio\">Portfolio</Nav.Link>\r\n                </Nav.Item>\r\n                <Nav.Item>\r\n                    <Nav.Link className=\"mr-3\" href=\"#contact\">Contact</Nav.Link>\r\n                </Nav.Item>\r\n            </Nav>\r\n        </Navbar.Collapse>\r\n    </Navbar>\r\n}\r\n\r\nexport default Navigation","import React, { Component } from 'react'\n//default styling\nimport 'normalize.css'\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport './App.css'\n//images\nimport me from './me.svg'\nimport image from './img/me.jpg'\n//components\nimport Panel from './components/Panel'\nimport Navigation from './components/Navigation'\n\n\nclass App extends Component {\n  state = {\n      isNavTop: true\n  }\n\n  componentDidMount() {\n    document.addEventListener('scroll', () => {\n      const isNavTop = window.scrollY < 100;\n      if (isNavTop !== this.state.isNavTop) {\n          this.setState({ isNavTop })\n      }\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Navigation isTop={this.state.isNavTop}/>\n        <Panel colorFlag=\"1\">\n          <div className=\"d-flex align-items-center\" style={{color: \"white\"}}>\n            <div>\n              <h1 style={{fontSize: \"6rem\", marginBottom: \"1rem\", marginLeft: \"-1%\"}}>Billy</h1>\n              <h6 style={{fontSize: \"2rem\", fontWeight: \"300\"}}><span style={{color: \"#34A2AE\"}}>Junior</span> Front End Developer</h6>\n            </div>\n            \n          </div>\n          <object data={me} aria-label=\"me\" id=\"svg\" style={{position: \"absolute\", bottom: \"0\", right: \"0\", width: \"50%\"}}/>\n        </Panel>\n        <Panel colorFlag=\"2\" title=\"About Me\">\n          <div className=\"col-xl-8 col-sm-12\" style={{color: \"white\"}}>\n            <p>Hi there!</p>\n            <p>My name is <strong>Billy Mijnendonckx</strong>, former student and tech enthusiast. For the past years I've went through a lot of change, both personally as professionally. I've completed 1.5 years of Multimedia Technology (Virtual 3D), at Karel de Grote Hogeschool in Antwerp, with my mind set on becoming a Game Programmer. In the 2nd year of that course however, due to a task I was given to write an essay about any self-chosen topic (I chose Modular Game Design). I decided to pursue Art in the Game Industry.</p>\n            <p>In the middle of my 2nd year I went to register for the course Game Graphics Design at Howest in Kortrijk. The year took off with a great start but at the first milestone (test exams, qweek) my mental state and personal issues were conflicting with my studies. I sat through the entire year trying to get back on track but I didn't get there in time. At the end of the year I was ready to start over with the right mind.</p>\n            <p>It's 2018, 2 weeks till college starts again and I got to hear that I am not able to reapply because of my shortage of study points. I quickly chose another course but was getting tired of switching courses. Art felt (and still feels) like what I wanted to do although I am not the best at it.</p>\n            <p>Through all these years I've learned most out of own practice, documentation and Youtube tutorials. <strong>I'm willing to take this to the field and learn more from experience.</strong></p>\n          </div>\n          <div className=\"col-xl-4 d-none d-md-block\">\n            <img src={image} alt=\"me\" style={{width: \"100%\"}}/>\n          </div>\n        </Panel>\n        <Panel colorFlag=\"1\" title=\"Skills\"></Panel>\n        <Panel colorFlag=\"2\" title=\"Portfolio\"></Panel>\n        <Panel colorFlag=\"1\" title=\"Contact\"></Panel>\n        <Panel colorFlag=\"2\"></Panel>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}